{"ast":null,"code":"var _jsxFileName = \"/Users/engeldb/Documents/Projects/CodeFellows/401/RESTy/src/components/main.js\";\nimport React from 'react';\nimport Form from './form.js';\nimport Result from './results.js';\nimport Loader from './loader.js';\nimport History from './history.js';\nimport superagent from 'superagent';\nimport { Switch, Route } from 'react-router-dom';\nimport { If, Then, When, Unless } from 'react-if';\nimport './style.scss';\nimport './_reset.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForm = (count, results, url, route) => {\n      this.setState({\n        count,\n        results,\n        url,\n        route\n      });\n    };\n\n    this.handleHistory = (url, route) => {\n      this.setState({\n        url,\n        route\n      });\n    };\n\n    this.handleUrl = url => {\n      this.setState({\n        url\n      });\n    };\n\n    this.handleRoute = route => {\n      this.setState({\n        route\n      });\n    };\n\n    this.toggleLoading = () => {\n      this.setState({\n        loading: !this.state.loading\n      });\n    };\n\n    this.handleBody = body => {\n      this.setState({\n        body\n      });\n      console.log(`inside handleForm ${this.state.body}`);\n    };\n\n    this.handleClick = async e => {\n      e.preventDefault();\n      this.toggleLoading();\n      console.log(this.state.routeType); // let route = this.state.routeType;\n      // let url = this.state.url;\n\n      sessionStorage.setItem(this.state.sessionCounter, `${this.state.route}, ${this.state.url}`);\n      let storageCount = this.state.sessionCounter + 1;\n      this.setState({\n        sessionCounter: storageCount\n      }); // console.log(url, route);\n\n      try {\n        let raw = await superagent(this.state.route, this.state.url);\n        console.log(raw);\n        let results = raw.body.results; // let results = await response.json();\n        // let entries = data.results;\n        // let results = Object.entries(entries);\n\n        let count = results.count;\n        setTimeout(() => {\n          this.setState({\n            count,\n            results\n          });\n          this.toggleLoading();\n        }, 1000);\n      } catch (e) {\n        setTimeout(() => {\n          this.toggleLoading(); // this.props.handler(e);\n        }, 1000);\n      }\n    };\n\n    this.state = {\n      loading: false,\n      count: 0,\n      sessionCounter: 0,\n      results: [],\n      history: [],\n      url: '',\n      route: '',\n      body: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(If, {\n          condition: this.state.loading,\n          children: /*#__PURE__*/_jsxDEV(Then, {\n            children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          prompt: \"SEND\",\n          toggleLoading: this.toggleLoading,\n          handleClick: this.handleClick,\n          handleRoute: this.handleRoute,\n          handleUrl: this.handleUrl,\n          route: this.state.route,\n          handleBody: this.handleBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), this.state.count !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Result, {\n            results: this.state.results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(History, {\n            history: this.state.history,\n            handleHistory: this.handleHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/history\",\n        children: /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/engeldb/Documents/Projects/CodeFellows/401/RESTy/src/components/main.js"],"names":["React","Form","Result","Loader","History","superagent","Switch","Route","If","Then","When","Unless","Main","Component","constructor","props","handleForm","count","results","url","route","setState","handleHistory","handleUrl","handleRoute","toggleLoading","loading","state","handleBody","body","console","log","handleClick","e","preventDefault","routeType","sessionStorage","setItem","sessionCounter","storageCount","raw","setTimeout","history","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './form.js';\nimport Result from './results.js';\nimport Loader from './loader.js';\nimport History from './history.js';\nimport superagent from 'superagent';\nimport { Switch, Route } from 'react-router-dom';\nimport { If, Then, When, Unless } from 'react-if';\nimport './style.scss';\nimport './_reset.scss';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      count: 0,\n      sessionCounter: 0,\n      results: [],\n      history: [],\n      url: '',\n      route: '',\n      body: ''\n    }\n  }\n\n  handleForm = (count, results, url, route) => {\n    this.setState({ count, results, url, route });\n  }\n  handleHistory = (url, route) => {\n    this.setState({ url, route });\n  }\n  handleUrl = (url) => {\n    this.setState({ url });\n  }\n  handleRoute = (route) => {\n    this.setState({ route });\n  }\n  toggleLoading = () => {\n    this.setState({ loading: !this.state.loading });\n  }\n  handleBody = (body) => {\n    this.setState({ body });\n    console.log(`inside handleForm ${this.state.body}`);\n  }\n\n  handleClick = async (e) => {\n    e.preventDefault();\n    this.toggleLoading();\n    console.log(this.state.routeType);\n    // let route = this.state.routeType;\n    // let url = this.state.url;\n    sessionStorage.setItem(this.state.sessionCounter, (`${this.state.route}, ${this.state.url}`));\n    let storageCount = this.state.sessionCounter + 1;\n    this.setState({ sessionCounter: storageCount });\n    // console.log(url, route);\n    try {\n\n      let raw = await superagent(this.state.route, this.state.url);\n      console.log(raw);\n      let results = raw.body.results;\n      // let results = await response.json();\n      // let entries = data.results;\n      // let results = Object.entries(entries);\n      let count = results.count;\n      setTimeout(() => {\n        this.setState({ count, results })\n        this.toggleLoading();\n      }, 1000);\n    } catch (e) {\n      setTimeout(() => {\n        this.toggleLoading();\n        // this.props.handler(e);\n      }, 1000);\n    }\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <If condition={this.state.loading}>\n            <Then>\n              <Loader />\n            </Then>\n          </If>\n          <Form prompt=\"SEND\"\n            toggleLoading={this.toggleLoading}\n            handleClick={this.handleClick}\n            handleRoute={this.handleRoute}\n            handleUrl={this.handleUrl}\n            route={this.state.route}\n            handleBody={this.handleBody} />\n          {this.state.count !== 0 ?\n            <>\n              <Result results={this.state.results} />\n              <History history={this.state.history}\n                handleHistory={this.handleHistory}></History>\n            </>\n            : ''}\n        </Route>\n        <Route exact path=\"/history\">\n          <History/>\n\n        </Route>\n\n\n      </Switch>\n    )\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}