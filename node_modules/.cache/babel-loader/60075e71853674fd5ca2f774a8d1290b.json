{"ast":null,"code":"var _jsxFileName = \"/Users/engeldb/Documents/Projects/CodeFellows/401/RESTy/src/components/app.js\";\nimport React from 'react';\nimport Header from './header.js';\nimport Footer from './footer.js';\nimport Form from './form.js';\nimport Result from './results.js';\nimport Loader from './loader.js';\nimport History from './history.js';\nimport superagent from 'superagent';\nimport { If, Then, When, Unless } from 'react-if';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForm = (count, results, url, route) => {\n      this.setState({\n        count,\n        results,\n        url,\n        route\n      });\n    };\n\n    this.handleHistory = (url, route) => {\n      this.setState({\n        url,\n        route\n      });\n    };\n\n    this.handleUrl = url => {\n      this.setState({\n        url\n      });\n    };\n\n    this.handleRoute = route => {\n      this.setState({\n        route\n      });\n    };\n\n    this.toggleLoading = () => {\n      this.setState({\n        loading: !this.state.loading\n      });\n    };\n\n    this.handleBody = body => {\n      this.setState({\n        body\n      });\n      console.log(`inside handleForm ${this.state.body}`);\n    };\n\n    this.handleClick = async e => {\n      e.preventDefault();\n      this.toggleLoading(); // let route = this.state.routeType;\n      // let url = this.state.url;\n\n      sessionStorage.setItem(this.state.counter, `${route}, ${url}`);\n      let storageCount = this.state.sessionCounter + 1;\n      this.setState({\n        counter: storageCount\n      });\n      console.log(url, route);\n\n      try {\n        let raw = await superagent(this.state.route, this.state.url);\n        let results = raw.body.results; // let results = await response.json();\n\n        console.log(results); // let entries = data.results;\n        // let results = Object.entries(entries);\n\n        let count = results.count;\n        setTimeout(() => {\n          this.setState({\n            count,\n            results\n          });\n          this.toggleLoading();\n        }, 1000);\n      } catch (e) {\n        setTimeout(() => {\n          this.toggleLoading(); // this.props.handler(e);\n        }, 1000);\n      }\n    };\n\n    this.state = {\n      loading: false,\n      count: 0,\n      sessionCounter: 0,\n      results: [],\n      history: [],\n      url: '',\n      route: '',\n      body: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(If, {\n        condition: this.state.loading,\n        children: /*#__PURE__*/_jsxDEV(Then, {\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        prompt: \"SEND\",\n        toggleLoading: this.toggleLoading,\n        handleClick: this.handleClick,\n        handleRoute: this.handleRoute,\n        handleUrl: this.handleUrl,\n        routeType: this.state.routeType,\n        handleBody: this.handleBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), this.state.count !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Result, {\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(History, {\n          history: this.state.history,\n          handler: this.handleHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true) : '', /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/engeldb/Documents/Projects/CodeFellows/401/RESTy/src/components/app.js"],"names":["React","Header","Footer","Form","Result","Loader","History","superagent","If","Then","When","Unless","App","Component","constructor","props","handleForm","count","results","url","route","setState","handleHistory","handleUrl","handleRoute","toggleLoading","loading","state","handleBody","body","console","log","handleClick","e","preventDefault","sessionStorage","setItem","counter","storageCount","sessionCounter","raw","setTimeout","history","render","routeType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './header.js';\nimport Footer from './footer.js';\nimport Form from './form.js';\nimport Result from './results.js';\nimport Loader from './loader.js';\nimport History from './history.js';\nimport superagent from 'superagent';\nimport { If, Then, When, Unless } from 'react-if';\nimport './style.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      count: 0,\n      sessionCounter: 0,\n      results: [],\n      history: [],\n      url: '',\n      route: '',\n      body: ''\n    }\n  }\n  \n  handleForm = (count, results, url, route) => {\n    this.setState({ count, results, url, route});\n  }\n  handleHistory = (url, route) => {\n    this.setState({ url, route});\n  }\n  handleUrl = (url) => {\n    this.setState({ url});\n  }\n  handleRoute = (route) => {\n    this.setState({ route });\n  } \n  toggleLoading = () => {\n    this.setState({ loading: !this.state.loading });\n  }\n\n  handleBody = (body) => {\n    this.setState({ body });\n    console.log(`inside handleForm ${this.state.body}`);\n  }\n  handleClick = async (e) => {\n    e.preventDefault();\n    this.toggleLoading();\n    // let route = this.state.routeType;\n    // let url = this.state.url;\n    sessionStorage.setItem(this.state.counter, (`${route}, ${url}`));\n    let storageCount = this.state.sessionCounter + 1;\n    this.setState({ counter: storageCount });\n    console.log(url, route);\n    try{\n      \n      let raw = await superagent(this.state.route, this.state.url);\n      let results = raw.body.results;\n      // let results = await response.json();\n      console.log(results);\n      // let entries = data.results;\n      // let results = Object.entries(entries);\n      let count = results.count;\n      setTimeout(() => {\n        this.setState({ count, results})\n        this.toggleLoading();\n      }, 1000);\n      } catch (e) {\n        setTimeout(() => {\n        this.toggleLoading();\n        // this.props.handler(e);\n      }, 1000);\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Header />\n        <If condition={this.state.loading}>\n          <Then>\n            <Loader/>\n          </Then>\n        </If>\n        <Form prompt=\"SEND\" \n        toggleLoading={this.toggleLoading} \n        handleClick={this.handleClick}\n        handleRoute={this.handleRoute}\n        handleUrl={this.handleUrl}\n        routeType={this.state.routeType}\n        handleBody={this.handleBody}/>\n         {this.state.count !== 0 ?\n         <>\n         <Result results={this.state.results}/>\n         <History history={this.state.history} handler={this.handleHistory}></History>\n          </>\n          : '' }\n        <Footer />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}