{"ast":null,"code":"var _jsxFileName = \"/Users/engeldb/Documents/Projects/CodeFellows/401/RESTy/src/components/main.js\";\nimport React from 'react';\nimport Form from './form.js';\nimport Result from './results.js';\nimport Loader from './loader.js';\nimport History from './history.js';\nimport Help from './help.js';\nimport superagent from 'superagent';\nimport { Switch, Route } from 'react-router-dom';\nimport { If, Then, When, Unless } from 'react-if'; // import './form.scss';\n\nimport './_reset.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForm = (count, results, url, route) => {\n      this.setState({\n        count,\n        results,\n        url,\n        route\n      });\n    };\n\n    this.handleHistory = (url, route, body) => {\n      this.setState({\n        url,\n        route,\n        body\n      });\n    };\n\n    this.handleUrl = url => {\n      this.setState({\n        url\n      });\n    };\n\n    this.handleRoute = route => {\n      this.setState({\n        route\n      });\n      console.log(`inside handleRoute ${this.state.route}`);\n    };\n\n    this.toggleLoading = () => {\n      this.setState({\n        loading: !this.state.loading\n      });\n    };\n\n    this.handleBody = body => {\n      this.setState({\n        body\n      });\n      console.log(`inside handleForm ${this.state.body}`);\n    };\n\n    this.handleClick = async e => {\n      e.preventDefault();\n      console.log('here');\n      this.toggleLoading();\n      sessionStorage.setItem(this.state.sessionCounter, `${this.state.route}, ${this.state.url}`);\n      let storageCount = this.state.sessionCounter + 1;\n      this.setState({\n        sessionCounter: storageCount\n      });\n\n      try {\n        let raw = null;\n        console.log(this.state.route);\n\n        if (this.state.route === \"get\" || this.state.route === \"delete\") {\n          raw = await superagent[this.state.route](this.state.url);\n        } else {\n          raw = await superagent[this.state.route](this.state.url).send(this.state.body);\n        }\n\n        let results = raw.body;\n        console.log(results);\n        let count = results.count;\n        setTimeout(() => {\n          this.setState({\n            count,\n            results\n          });\n          this.toggleLoading();\n        }, 1000);\n      } catch (e) {\n        setTimeout(() => {\n          console.log(e);\n          this.toggleLoading();\n          this.setState({\n            results: e\n          });\n        }, 1000);\n      }\n    };\n\n    this.state = {\n      loading: false,\n      count: 0,\n      sessionCounter: 0,\n      results: [],\n      history: [],\n      url: '',\n      route: '',\n      body: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(If, {\n          condition: this.state.loading,\n          children: /*#__PURE__*/_jsxDEV(Then, {\n            children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          prompt: \"SEND\",\n          toggleLoading: this.toggleLoading,\n          handleClick: this.handleClick,\n          handleRoute: this.handleRoute,\n          handleUrl: this.handleUrl,\n          route: this.state.route,\n          handleBody: this.handleBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), this.state.count !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Result, {\n            results: this.state.results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(History, {\n            history: this.state.history,\n            handleRoute: this.handleRoute,\n            handleUrl: this.handleUrl,\n            handleBody: this.handleBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/history\",\n        children: /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/help\",\n        children: /*#__PURE__*/_jsxDEV(Help, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/engeldb/Documents/Projects/CodeFellows/401/RESTy/src/components/main.js"],"names":["React","Form","Result","Loader","History","Help","superagent","Switch","Route","If","Then","When","Unless","Main","Component","constructor","props","handleForm","count","results","url","route","setState","handleHistory","body","handleUrl","handleRoute","console","log","state","toggleLoading","loading","handleBody","handleClick","e","preventDefault","sessionStorage","setItem","sessionCounter","storageCount","raw","send","setTimeout","history","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './form.js';\nimport Result from './results.js';\nimport Loader from './loader.js';\nimport History from './history.js';\nimport Help from './help.js';\nimport superagent from 'superagent';\nimport { Switch, Route } from 'react-router-dom';\nimport { If, Then, When, Unless } from 'react-if';\n// import './form.scss';\nimport './_reset.scss';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      count: 0,\n      sessionCounter: 0,\n      results: [],\n      history: [],\n      url: '',\n      route: '',\n      body: ''\n    }\n  }\n\n  handleForm = (count, results, url, route) => {\n    this.setState({ count, results, url, route });\n  }\n  handleHistory = (url, route, body) => {\n    this.setState({ url, route, body });\n  }\n  handleUrl = (url) => {\n    this.setState({ url });\n  }\n  handleRoute = (route) => {\n    this.setState({ route });\n    console.log(`inside handleRoute ${this.state.route}`);\n  }\n  toggleLoading = () => {\n    this.setState({ loading: !this.state.loading });\n  }\n  handleBody = (body) => {\n    this.setState({ body });\n    console.log(`inside handleForm ${this.state.body}`);\n  }\n\n  handleClick = async (e) => {\n    e.preventDefault();\n    console.log('here');\n    this.toggleLoading();\n    sessionStorage.setItem(this.state.sessionCounter, (`${this.state.route}, ${this.state.url}`));\n    let storageCount = this.state.sessionCounter + 1;\n    this.setState({ sessionCounter: storageCount });\n    try {\n      let raw = null;\n      console.log(this.state.route);\n      if( this.state.route === \"get\" || this.state.route === \"delete\" ) {\n        raw = await superagent[this.state.route](this.state.url);\n      }\n      else {\n        raw = await superagent[this.state.route](this.state.url).send(this.state.body);\n      }\n      let results = raw.body;\n      console.log(results);\n      let count = results.count;\n      setTimeout(() => {\n        this.setState({ count, results })\n        this.toggleLoading();\n      }, 1000);\n    } catch (e) {\n      setTimeout(() => {\n        console.log(e);\n        this.toggleLoading();\n        this.setState({ results: e })\n      }, 1000);\n    }\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <If condition={this.state.loading}>\n            <Then>\n              <Loader />\n            </Then>\n          </If>\n          <Form prompt=\"SEND\"\n            toggleLoading={this.toggleLoading}\n            handleClick={this.handleClick}\n            handleRoute={this.handleRoute}\n            handleUrl={this.handleUrl}\n            route={this.state.route}\n            handleBody={this.handleBody} />\n          {this.state.count !== 0 ?\n            <>\n              <Result results={this.state.results} />\n              <History history={this.state.history}\n                handleRoute={this.handleRoute}\n                handleUrl={this.handleUrl}\n                handleBody={this.handleBody}\n                ></History>\n            </>\n            : ''}\n        </Route>\n        <Route exact path=\"/history\">\n          <History/>\n\n        </Route>\n        <Route exact path=\"/help\">\n          <Help/>\n        </Route>\n\n\n      </Switch>\n    )\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}